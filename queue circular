class Node{
    int data;
    Node front;
    Node rear;
    Node next;
    
    Node(int value){
        this.data=value;
        this.front=null;
        this.rear=null;
        this.next=null;
    }
}
class queue{
    Node front;
    Node rear;
    public void enqueue(int value){
        Node newnode = new Node(value);
        if(rear==null){
            rear=newnode;
            rear.next=rear;
            //newnode.next=front;
            return;
        }else{
            newnode.next=rear.next;
            rear.next=newnode;
            rear=newnode;
        }
        
        
}
public void dequeue(){
    Node front =rear.next;
    int val=front.data;
    if(rear==front){
        rear=null;
    }
    else{
        rear.next=front.next;
    }
    //System.out.println(val);
    
}
public void display(){
    
    if(rear ==null){
        System.out.println("list is empty");
        return;
    }
   Node temp=rear.next;
    
    do{
        System.out.println(temp.data+"");
        temp=temp.next;
    }while(temp!=rear.next);
    System.out.println();
}
}
public class Main{
    public static void main(String[]args){
        queue q= new queue();
        q.enqueue(3);
        q.enqueue(8);
        q.enqueue(4);
        q.display();
        q.dequeue();
        q.display();
    }
}
class Node{
    int data;
    Node front;
    Node rear;
    Node next;
    
    Node(int value){
        this.data=value;
        this.front=null;
        this.rear=null;
        this.next=null;
    }
}
class queue{
    Node front;
    Node rear;
    public void enqueue(int value){
        Node newnode = new Node(value);
        if(rear==null){
            rear=newnode;
            rear.next=rear;
            //newnode.next=front;
            return;
        }else{
            newnode.next=rear.next;
            rear.next=newnode;
            rear=newnode;
        }
        
        
}
public void dequeue(){
    Node front =rear.next;
    int val=front.data;
    if(rear==front){
        rear=null;
    }
    else{
        rear.next=front.next;
    }
    //System.out.println(val);
    
}
public void display(){
    
    if(rear ==null){
        System.out.println("list is empty");
        return;
    }
   Node temp=rear.next;
    
    do{
        System.out.println(temp.data+"");
        temp=temp.next;
    }while(temp!=rear.next);
    System.out.println();
}
}
public class Main{
    public static void main(String[]args){
        queue q= new queue();
        q.enqueue(3);
        q.enqueue(8);
        q.enqueue(4);
        q.display();
        q.dequeue();
        q.display();
    }
}
