class Node{
    int data;
    Node next;
    Node prev;
    
    
    Node(int value){
        this.data=value;
        this.next=null;
        this.prev=null;
    }
}
class doublyLinkedList{
    Node head;
    public void insert(int value){
        Node newnode = new Node(value);
        if(head == null){
            head=newnode;
            return;
        }
        Node temp = head;
        while(temp.next!=null){
            temp=temp.next;
        }
        temp.next=newnode;
        newnode.prev=temp;
    }
    
    public void delete(int value){
        Node temp = head;
        if(head==null){
            System.out.println("nolist");
        }
        if(head.data==value){
            head=head.next;
            head.prev=null;
            return;
        }
        while(temp!=null && temp.data!=value){
            temp=temp.next;
        }
        if(temp==null){
            System.out.println("not found");
        }
        if(temp.next!=null)temp.next.prev=temp.prev;
        if(temp.prev!=null)temp.prev.next=temp.next;
    }
    
    public void display(){
       
        if(head ==null){
            System.out.println("list is empty");
        }
        Node temp=head;
        while(temp!=null){
            System.out.println(temp.data+" ");
            temp=temp.next;
        }
    }
    public void search(int value){
        int position=1;
        if(head==null){
            System.out.println("list isempty");
        }
        Node temp =head;
        while(temp!=null){
            if(temp.data==value){
                System.out.println("value found at:"+position);
            }
            temp=temp.next;
            position++;
        }
        
    }
}
public class Main{
    public static void main(String[]args){
        doublyLinkedList dl = new doublyLinkedList();
        dl.insert(10);
        dl.insert(50);
        dl.insert(80);
        dl.display();
        dl.search(5);
        dl.display();
        dl.delete(80);
        dl.display();
    }
}
